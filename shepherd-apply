#!/bin/bash
set -e -o pipefail

PROJECT_ID="$1"
IMAGE_AND_HASH="$2"
#
# Applies new Kubernetes configuration for given project. Called from `shepherd-build` script
# after a new image has been built. Run this script if you make any changes to the project Kubernetes
# yaml config file and you want to redeploy the app quickly, without having to build it first.
#
# Accepts parameters:
# - the project id, e.g. vaadin-boot-example-gradle
# - image_and_hash of the latest image pushed in kubernetes docker registry, e.g. localhost:32000/test/vaadin-boot-example-gradle@sha256:62d6de89ced35ed07571fb9190227b08a7a10c80c97eccfa69b1aa5829f44b9a
#
# Expects:
# - a k8s resource config file yaml named /etc/shepherd/k8s/vaadin-boot-example-gradle.yaml
#
# The k8s resource config file should:
# - be namespaced to shepherd-$PROJECT_ID
# - include all definitions for pod, service and ingress
#
# You can get the image_and_hash from the last Jenkins build for that project -
# it's logged to the stdout by the `shepherd-build` script.

help() {
  echo
  echo "Use: $0 project_id image_and_hash"
  exit 1
}

if [[ -z "${PROJECT_ID}" ]]; then
  echo "project_id missing; should be e.g. vaadin-boot-example-gradle"
  help
fi
# the Project ID must:
#
# * contain at most 54 characters
# * contain only lowercase alphanumeric characters or '-'
# * start with an alphanumeric character
# * end with an alphanumeric character
#
if ! [[ $PROJECT_ID =~ ^[a-z0-9][a-z0-9\-]{0,52}[a-z0-9]$ ]]; then
  echo "$PROJECT_ID is not a valid project ID"
  exit 1
fi

if [[ -z "${IMAGE_AND_HASH}" ]]; then
  echo "image_and_hash missing; should be e.g. localhost:32000/test/vaadin-boot-example-gradle@sha256:62d6de89ced35ed07571fb9190227b08a7a10c80c97eccfa69b1aa5829f44b9a"
  help
fi

K8S_RESOURCE_CONFIG_FILE="/etc/shepherd/k8s/${PROJECT_ID}.yaml"

if [[ ! -f "$K8S_RESOURCE_CONFIG_FILE" ]]; then
  echo "$K8S_RESOURCE_CONFIG_FILE does not exist"
  exit 1
fi

# generate new k8s resource config and apply.
cat "$K8S_RESOURCE_CONFIG_FILE" | sed "s#<<IMAGE_AND_HASH>>#$IMAGE_AND_HASH#" >"/tmp/${PROJECT_ID}.yaml"

echo "Applying new k8s resource config file"
microk8s kubectl apply -f "/tmp/${PROJECT_ID}.yaml"
