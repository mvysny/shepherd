#!/bin/bash
set -e -o pipefail

#
# Creates a new basic project configuration. Example of use:
#
# ./shepherd-new my-pet-project
#
# This will create Kubernetes config file and will print further steps to take. After that's done,
# your app will be running at https://v-herd.eu/my-pet-project and will automatically
# update as you commit code to git.
#

K8S=/etc/shepherd/k8s
PROJECT_ID="$1"

if [[ -z "$PROJECT_ID" ]]; then
        echo "Creates a new basic project configuration."
        echo
        echo "Run $0 project_id [max_memory] [dns]"
        echo "  - max_memory: for example 256Mi"
        echo "  - dns: for example yourdomain.com"
        exit 1
fi

MAX_MEMORY="$2"
MAX_MEMORY="${MAX_MEMORY:-256Mi}"
DNS="$3"
DNS="${DNS:-v-herd.eu}"

#
# creates a k8s resource config yaml file
#
K8S_RESOURCE_FILE="$K8S/$PROJECT_ID.yaml"

if [[ -f "$K8S_RESOURCE_FILE" ]]; then
  echo "$K8S_RESOURCE_FILE already exists"
  exit 1
fi

NAMESPACE="shepherd-$PROJECT_ID"

echo "Creating project $PROJECT_ID in $K8S_RESOURCE_FILE"
echo "Namespace: $NAMESPACE"
echo "DNS: $DNS"
echo "Max. memory: $MAX_MEMORY"

if [[ ! -d $K8S ]]; then
  mkdir -p $K8S
fi

cat << EOF >"$K8S_RESOURCE_FILE"
#
# Microk8s resource config file for $PROJECT_ID
#

apiVersion: v1
kind: Namespace
metadata:
  name: $NAMESPACE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
  namespace: $NAMESPACE
spec:
  selector:
    matchLabels:
      app: pod
  template:
    metadata:
      labels:
        app: pod
    spec:
      containers:
      - name: main
        image: <<IMAGE_AND_HASH>>
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: 0
          limits:
            memory: "$MAX_MEMORY"  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            cpu: 1
---
apiVersion: v1
kind: Service
metadata:
  name: service
  namespace: $NAMESPACE
spec:
  selector:
    app: pod
  ports:
    - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-main
  namespace: $NAMESPACE
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /\$3
    nginx.ingress.kubernetes.io/proxy-cookie-path: / /\$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^(/$PROJECT_ID)\$ \$1/ permanent;
spec:
  tls:
  - hosts:
    - $DNS
  rules:
    - host: $DNS
      http:
        paths:
          - path: /($PROJECT_ID)(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: service
                port:
                  number: 8080
EOF

echo "microk8s resource config file has been written to $K8S_RESOURCE_FILE"
echo
echo "Further steps:"
echo "1. Create a job in Jenkins. See https://github.com/mvysny/shepherd#adding-a-project for exact steps"
echo "2. Further modify the $K8S_RESOURCE_FILE as necessary"
echo "3. Do NOT 'mkctl apply -f $K8S_RESOURCE_FILE' by hand since the IMAGE needs to be filled in. The shepherd-build script will do that."
echo "4. Once Jenkins runs the job, your app will be running at https://v-herd.eu/$PROJECT_ID"
